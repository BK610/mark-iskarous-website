---
const { title, abstract, text, link } = Astro.props;

import { PortableText } from "astro-portabletext";
---

<div
  id={encodeURIComponent(title)}
  class="p-4 flex flex-col gap-2 border border-neutral-400 bg-neutral-50 rounded-md hover:bg-neutral-100 hover:border-neutral-800 cursor-pointer toggle-btn"
>
  <div class="flex flex-col md:flex-row gap-2">
    <h2 class="font-serif font-semibold text-xl">{title}</h2>
    <div class="min-w-fit h-fit md:place-self-center">
      <a
        class="w-fit px-2 py-2 mb-2 rounded-md
        text-neutral-50
        bg-neutral-800 hover:bg-neutral-600"
        href={link}
        target="_blank"
      >
        <b>View →</b>
      </a>
    </div>
  </div>
  <span class="w-fit mx-auto text-neutral-600"> ⬇︎ </span>
  <div class="collapsible-content collapsed flex flex-col gap-2">
    <h3 class="text-lg font-semibold">Summary</h3>
    <PortableText value={abstract} />
    <h3 class="text-lg font-semibold">Citation</h3>
    <div class="border-l-2 pl-2 text-neutral-700 text-sm">
      <PortableText value={text} />
    </div>
  </div>
</div>

<script>
  // Client-side JavaScript to handle the toggle functionality
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtns = document.querySelectorAll(".toggle-btn");

    toggleBtns.forEach((btn) => {
      btn.addEventListener("click", () => {
        const content = btn.lastElementChild;
        content?.classList.toggle("collapsed");
      });
    });
  });
</script>

<style>
  .collapsible-content {
    max-height: fit-content;
    overflow: hidden;
    transition: max-height 0.5s ease-in-out;
  }

  .collapsible-content.collapsed {
    max-height: 0; /* Adjust this value based on your content's maximum height */
  }
</style>
