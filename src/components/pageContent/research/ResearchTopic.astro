---
export const prerender = true;

const { title, longDescription, imagesAndVideos, id, publications } =
  Astro.props;

import Card from "@/components/global/Card.astro";
import { PortableText } from "astro-portabletext";
import type { SanityDocument } from "@sanity/client";
import MediaCarousel from "@/components/global/MediaCarousel";

import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";

const builder = imageUrlBuilder(sanityClient);
const urlFor = (source: string) => builder.image(source);

// Transform the imagesAndVideos data to match the MediaCarousel interface
const mediaItems = imagesAndVideos?.map((item: any) => ({
  _type: item._type,
  image: item._type === "researchImage" ? urlFor(item.image).url() : undefined,
  youtubeUrl: item._type === "youtubeVideo" ? item.youtubeUrl : undefined,
}));
---

<Card id={encodeURIComponent(id)} className="p-2 md:py-4 md:px-6">
  <div class="grid md:grid-cols-2 gap-4">
    <div>
      <h3 class="text-xl font-semibold font-serif pt-2">{title}</h3>
      <p class="text-sm md:text-base text-justify">{longDescription}</p>
    </div>
    <div class="flex flex-col">
      {
        mediaItems && mediaItems.length > 0 && (
          <Card class="w-full overflow-hidden">
            <MediaCarousel client:load items={mediaItems} />
          </Card>
        )
      }
      {
        publications ? (
          <div class="divide-y-2">
            <h4 class="font-semibold pt-4 text-sm">Related publications</h4>
            <ul class="list-decimal list-inside space-y-2">
              {publications.map((publication: SanityDocument, key: number) => (
                <li class="list-item list-none text-sm">
                  <a
                    class="hover:underline"
                    href={
                      "/publications#" + encodeURIComponent(publication._id)
                    }
                  >
                    <PortableText value={publication.text} />
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ) : null
      }
    </div>
  </div>
</Card>
